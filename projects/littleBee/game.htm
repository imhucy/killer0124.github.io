<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>little Game</title>
	<style>
	html,body,div,button,ul,li{margin:0;padding: 0;}
	ul,li{list-style: none;}
	#stage{width: 800px;height: 700px;background: #000;position: relative;margin:0 auto;}
	button{margin:370px 370px;}

	#score{color: #fff;font: 15px/1.5em "Microsoft Yahei";}
	
	#bees{position: relative;}
	.b1{background: url(images/mf1.png);width:40px;height: 28px;float: left;}
	.b2{background: url(images/mf2.png);width:40px;height: 28px;float: left;}
	.b3{background: url(images/mf3.png);width:40px;height: 28px;float: left;}

	.air{background: url(images/fj.png);width:46px;height: 60px;position: absolute;}
	.bullet{background: #fff;width:1px;height: 10px;position: absolute;}
	</style>
	<script>
	window.onload = function () {
		var btn  = document.getElementsByTagName('button')[0];
		btn.onclick = function () {
			this.style.display = "none";

			Game.init(0);//游戏初始化关卡一

			
		}
		/*用来获取keyCode*/
		/*document.onkeyup = function (e) {
			e = e||window.event;
			alert(e.keyCode);
		}*/
		/*
			z -->keyCode = 90
		*/
	};

	var Game = {
		bee:{//小蜜蜂的相关数据

			b1:{style:"b1",blood:1,score:1,speed:5},
			
			b2:{style:"b2",blood:2,score:3,speed:5},
			
			b3:{style:"b3",blood:3,score:5,speed:5}
		},

		gk:[/*关卡的相关数据*/
			{
				map:[
					'b2','b2','b2','b2','b2','b2','b2','b2','b2','b2',
					'b2','b2','b2','b2','b2','b2','b2','b2','b2','b2',
					'b2','b2','b2','b2','b2','b2','b2','b2','b2','b2',
					'b1','b1','b1','b1','b1','b1','b1','b1','b1','b1',
					'b1','b1','b1','b1','b1','b1','b1','b1','b1','b1',
					'b1','b1','b1','b1','b1','b1','b1','b1','b1','b1'
				],
				colNum:10,//设置一行10个小蜜蜂
				//关卡一的移动速度
				speedX:3,
				speedY:3
			},


			{
				map:[
					'b3','b3','b3','b3','b3','b3','b3','b3','b3','b3',
					'b3','b3','b3','b3','b3','b3','b3','b3','b3','b3',
					'b3','b3','b3','b3','b3','b3','b3','b3','b3','b3',
					'b2','b2','b2','b2','b2','b2','b2','b2','b2','b2',
					'b2','b2','b2','b2','b2','b2','b2','b2','b2','b2',
					'b2','b2','b2','b2','b2','b2','b2','b2','b2','b2',
				],
				colNum:10,//设置一行10个小蜜蜂
				//关卡二的移动速度
				speedX:4,
				speedY:4
			}
		],

		airplan:{//飞机的相关数据
			//飞机的样式
			styles:"air",
			//子弹的样式
			bulletStyle:"bullet",
			//飞机的移动速度
			moveSpeed:10,
			//子弹的移动速度
			bulletSpeed:15
		},

		init:function (iNum) {//初始化游戏
			/* iNum：关卡数 */
			this.iNum = iNum;
			// 获取游戏的舞台
			this.stage = document.getElementById('stage');

			//初始化积分系统
			this.createScore();

			// 初始化蜂巢
			this.createBees(this.iNum);

			// 初始化飞机
			this.createAir();

		},

		createScore:function () {			//初始化积分系统
			var oS = document.createElement("div");
			oS.id = "score";
			oS.innerHTML = "积分:<span>0</span>"
			this.stage.appendChild(oS);
			//获取积分，方便写入积分
			this.score = document.getElementsByTagName('span')[0];
		},

		createBees:function (iNum) {			// 初始化蜂巢
			/*iNum：关卡数*/
			oBees = document.createElement('ul');
			oBees.id = "bees";
			oBees.style.width = this.gk[iNum].colNum * 40 +'px';
			oBees.style.height = this.gk[iNum].map.length / this.gk[iNum].colNum * 28 +'px';
			this.stage.appendChild(oBees);
			oBees.style.left = ( this.stage.offsetWidth - oBees.offsetWidth )/2 +'px';
			this.oBees = oBees;
			for (var i = 0; i < this.gk[iNum].map.length; i++) {
				var oLi = document.createElement('li');
				oLi.className = this.bee[this.gk[iNum].map[i]].style;
				oLi.blood = this.bee[this.gk[iNum].map[i]].blood;
				oLi.score = this.bee[this.gk[iNum].map[i]].score;
				oLi.speed = this.bee[this.gk[iNum].map[i]].speed;
				oLi.timer = null;
				this.oBees.appendChild(oLi);
			};
			//获取蜂群
			this.aLi = this.oBees.getElementsByTagName('li');

			//将蜂群的定位改为position定位
			//保存当前蜂群的位置
			var pos = [];
			for (var i = 0; i < this.aLi.length; i++) {
				pos.push([this.aLi[i].offsetLeft,this.aLi[i].offsetTop]); 
			};
			//给蜂群添加position属性
			for (var i = 0; i < this.aLi.length; i++) {
				this.aLi[i].style.position = "absolute";
				this.aLi[i].style.left = pos[i][0] + 'px';
				this.aLi[i].style.top = pos[i][1] + 'px';
			};

			//蜂巢的移动函数
			this.beesMove(iNum);
		},

		beesMove:function (iNum) {
			var This = this;
			this.oBees.timer = setInterval(function () {
				if (This.oBees.offsetLeft >= This.stage.offsetWidth - This.oBees.offsetWidth  || This.oBees.offsetLeft <= 0) {
					This.gk[iNum].speedX *= -1;
					This.oBees.style.top = This.oBees.offsetTop - This.gk[iNum].speedY + 'px';
				};

				This.oBees.style.left = This.oBees.offsetLeft + This.gk[iNum].speedX + 'px';
			
			},30);
			this.oBees.timers = setInterval(function () {
				//随机数
				var r = Math.floor(Math.random()*This.aLi.length);
				This.beeFly(r);
			},5000)
		},

		beeFly:function (r) {
			var This = this;
			var o1 = This.aLi[r];
			/*
			var l1 = This.aLi[r].offsetLeft + This.aLi[r].parentNode.offsetLeft + This.aLi[r].offsetWidth/2;
			var t1 = This.aLi[r].offsetTop +This.aLi[r].parentNode.offsetTop +This.aLi[r].offsetHeight/2;
			var l2 = This.oAir.offsetLeft+This.oAir.offsetWidth/2;
			var t2 = This.oAir.offsetTop + This.oAir.offsetHeight/2;
			*/
			//<l1,t1>是小蜜蜂的坐标
			//<l2,t2>是飞机的坐标
			this.aLi[r].timer = setInterval(function () {
				//横坐标之差l1 - l2
				var a = (This.oAir.offsetLeft+This.oAir.offsetWidth/2)-(This.aLi[r].offsetLeft + This.aLi[r].parentNode.offsetLeft + This.aLi[r].offsetWidth/2);
				//纵坐标之差t1-t2
				var b = (This.oAir.offsetTop+This.oAir.offsetHeight/2)-(This.aLi[r].offsetTop +This.aLi[r].parentNode.offsetTop +This.aLi[r].offsetHeight/2);
				//计算斜角
				var c = Math.sqrt(a*a+b*b);
				//x轴方向的速度
				var sX = o1.speed * a / c ;
				//y轴方向的速度
				var sY = o1.speed * b / c ;
				o1.style.left = o1.offsetLeft + sX + 'px';
				o1.style.top = o1.offsetTop + sY + 'px';
				
				//游戏结束的条件
				if ( This.isPz(o1,This.oAir) ) {
					window.alert("Game over!");
					window.location.reload();
				};

			},30);//小蜜蜂飞行的速度
		},

		createAir:function  () {			// 初始化飞机

			this.oAir = document.createElement('div');
			this.oAir.className = this.airplan.styles;
			this.stage.appendChild(this.oAir);
			this.oAir.style.left = (this.stage.offsetWidth - this.oAir.offsetWidth)/2 + 'px';
			this.oAir.style.top = this.stage.offsetHeight - this.oAir.offsetHeight + 'px';

			this.moveAir();
		},

		moveAir:function () {
			var This = this;
			var key = 0;
			var timer = null;
			document.onkeydown = function(e){
				var e = e || window.event;
				if(e.keyCode == 37){
					key = 1;
				}else if(e.keyCode == 39){
					key = 2;
				};
				if (!timer) {
					timer = setInterval(show,50);
				};
			};

			document.onkeyup = function  (e) {
			
				var e = e|| window.event;
				if (e.keyCode == 37 || e.keyCode == 39) {
					clearInterval(timer);
					timer = null;
					key = 0;
				};
				if (e.keyCode == 90) {
					This.createBullet();
				};
				
			
			};

			function show () {

				if (key == 1) {
					
					if (This.oAir.offsetLeft <= 10) {
						
						This.oAir.style.left = This.oAir.offsetLeft + "px";
					
					}else{
					
						This.oAir.style.left = This.oAir.offsetLeft - This.airplan.moveSpeed + 'px';
					
					};
									
				}else if (key == 2) {
				
					if (This.oAir.offsetLeft >= This.stage.offsetWidth - This.oAir.offsetWidth -10) {

						This.oAir.style.left = This.oAir.offsetLeft + "px";
					
					}else{
					
						This.oAir.style.left = This.oAir.offsetLeft + This.airplan.moveSpeed + 'px';
					
					};
					
				
				}else if (key == 0) {
				
					return;
				
				};
			}
		},

		createBullet:function () {
			oB = document.createElement('div');
			oB.className = this.airplan.bulletStyle;
			this.stage.appendChild(oB);
			oB.style.left = this.oAir.offsetLeft + this.oAir.offsetWidth/2 + 'px';
			oB.style.top = this.oAir.offsetTop - oB.offsetHeight + 'px';
			this.bulletRun(oB);
		},
		bulletRun:function (obj) {//看子弹飞
			var This = this;
			obj.timer = setInterval(function () {
				obj.style.top = obj.offsetTop - This.airplan.bulletSpeed + 'px';

				//子弹飞出舞台后要销毁
				//销毁子弹之前先停止计时器
				if (obj.offsetTop < -obj.offsetHeight) {
					
					clearInterval(obj.timer);
					This.stage.removeChild(obj);
				};

				//碰撞检测之后要销毁子弹
				for (var i = 0; i < This.aLi.length; i++) {
					if (This.isPz(This.aLi[i],obj)) {
						// 若是碰撞检测返回TRUE
						// 小蜜蜂减血
						// 销毁子弹
						//alert(This.isPz(This.aLi[i],obj))
						
						if ((--This.aLi[i].blood)==0) {
							This.score.innerHTML = parseInt(This.score.innerHTML) + This.aLi[i].score;
							if(This.aLi[i].timer != null){clearInterval(This.aLi[i].timer);}
							This.oBees.removeChild(This.aLi[i]);
						};
						clearInterval(obj.timer);
						This.stage.removeChild(obj);
					};
					if(This.oBees.innerHTML == ''){// 小蜜蜂都打完了进入下一关
						alert("成功过关，点击进入下一关")
						if (++This.iNum <= This.gk.length-1) {
							if (This.oBees) {
								clearInterval(This.oBees.timer);
								clearInterval(This.oBees.timers);
								This.stage.removeChild(This.oBees);
							};
							This.createBees(This.iNum);
						}else{
							alert("恭喜您已经成功通关！！！\n[撒花][撒花][撒花]");
							window.location.reload();
						};
					};
				};
			},30);
			
			

		},
		isPz:function (o1,o2) {
			//注意参考系
			//蜂巢中的对象
			var r1 = o1.offsetLeft + o1.parentNode.offsetLeft + o1.offsetWidth;
			var l1 = o1.offsetLeft + o1.parentNode.offsetLeft;
			var t1 = o1.offsetTop +o1.parentNode.offsetTop;
			var b1 = o1.offsetTop +o1.parentNode.offsetTop + o1.offsetHeight;
			//舞台中的对象
			var r2 = o2.offsetLeft + o2.offsetWidth;
			var l2 = o2.offsetLeft;
			var t2 = o2.offsetTop;
			var b2 = o2.offsetTop + o2.offsetHeight;
			if (l1 > r2 || r1 < l2 || t1 > b2 || b1 < t2) {
				return false;
			}else{
				return true;
			};
		}


		
	}

	</script>
</head>
<body>
	<div id="stage">
		<button>游戏开始</button>
	</div>
</body>
</html>